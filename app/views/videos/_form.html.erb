<!-- <%#= form_with(model: video, local: true) do |form| %>
  <%# if video.errors.any? %>
    <div id="error_explanation">
      <h2><%#= pluralize(video.errors.count, "error") %> prohibited this video from being saved:</h2>

      <ul>
      <%# video.errors.full_messages.each do |message| %>
        <li><%#= message %></li>
      <%# end %>
      </ul>
    </div>
  <%# end %>

  <div class="field">
    <%#= form.label :company_id %>
    <%#= form.text_field :company_id %>
  </div>

  <div class="field">
    <%#= form.label :customer_id %>
    <%#= form.text_field :customer_id %>
  </div>

  <div class="field">
    <%#= form.label :is_approve %>
    <%#= form.check_box :is_approve %>
  </div>

  <div class="field">
    <%#= form.label :video_url %>
    <%#= form.file_field :video_url, id: "video" %>
  </div>

  <div class="actions">
    <%#= form.submit %>
  </div>
  <%# end %>
  -->
  <%= select_tag "job_card", options_from_collection_for_select(Company.all, "id", "company_name"), {class: "form-controll", id: "company_name", include_blank: true} %>
  <button onclick="upload()">Upload</button>
  <style>
    #myVideo {
            background-color: #9ab87a;
        }
</style>

     
<video id="myVideo" class="video-js vjs-default-skin"></video>

<script>
        var videoMaxLengthInSeconds = 120;

        // Inialize the video player
        var player = videojs("myVideo", {
            controls: true,
            width: 720,
            height: 480,
            fluid: false,
            plugins: {
                record: {
                    audio: true,
                    video: true,
                    maxLength: videoMaxLengthInSeconds,
                    debug: true,
                    videoMimeType: "video/mp4"
                }
            }
        }, function(){
            // print version information at startup
            videojs.log(
                'Using video.js', videojs.VERSION,
                'with videojs-record', videojs.getPluginVersion('record'),
                'and recordrtc', RecordRTC.version
            );
        });

        // error handling for getUserMedia
        player.on('deviceError', function() {
            console.log('device error:', player.deviceErrorCode);
        });

        // Handle error events of the video player
        player.on('error', function(error) {
            console.log('error:', error);
        });

        // user clicked the record button and started recording !
        player.on('startRecord', function() {
            console.log('started recording! Do whatever you need to');
        });

        // user completed recording and stream is available
        // Upload the Blob to your server or download it locally !
        player.on('finishRecord', function() {

            // the blob object contains the recorded data that
            // can be downloaded by the user, stored on server etc.
            var videoBlob = player.recordedData.video;
               console.log('finished recording: ', player.recordedData);

            // Create an instance of FormData and append the video parameter that
            // will be interpreted in the server as a file

            
        });
        function upload(){
         var formData = new FormData();
            formData.append('video', player.recordedData.video);
            // Execute the ajax request, in this case we have a very simple PHP script
            // that accepts and save the uploaded "video" file
            xhr('http://localhost:3000/videos', formData, function (res) {
                console.log("Video succesfully uploaded !", res);
            });

            // Helper function to send 
            function xhr(url, data, callback) {
                var request = new XMLHttpRequest();
                request.onreadystatechange = function () {
                    if (request.readyState == 4 && request.status == 200) {
                            
                    }
                };
                request.open('POST', url);
                request.send(data);
            }
            }
        </script>
